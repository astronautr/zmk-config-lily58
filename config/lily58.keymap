/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC                          &kp N1  &kp N2  &kp N3     &kp N4        &kp N5                                                 &kp N6          &kp N7        &kp N8           &kp N9            &kp N0             &kp BACKSPACE
&kp TAB                          &kp Q   &kp W   &kp E      &kp R         &kp T                                                  &kp Y           &kp U         &kp I            &kp O             &kp P              &kp MINUS
&mo 3                            &kp A   &kp S   &kp D      &kp F         &kp G                                                  &kp H           &kp J         &kp K            &kp L             &kp FSLH           &lt 4 ENTER
&mt LEFT_SHIFT LEFT_PARENTHESIS  &kp Z   &kp X   &kp C      &kp V         &kp B         &kp COMMA      &kp DOT                   &kp N           &kp M         &kp SEMI         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &mt RSHFT RIGHT_PARENTHESIS
                                                 &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI  &lt 4 SPACE    &mt RIGHT_ALT LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW
            >;
        };

        win_layer {
            bindings = <
&kp ESC         &kp N1  &kp N2  &kp N3     &kp N4         &kp N5                                               &kp N6          &kp N7        &kp N8           &kp N9            &kp N0             &kp BACKSPACE
&kp TAB         &kp Q   &kp W   &kp E      &kp R          &kp T                                                &kp Y           &kp U         &kp I            &kp O             &kp P              &kp MINUS
&mo 3           &kp A   &kp S   &kp D      &kp F          &kp G                                                &kp H           &kp J         &kp K            &kp L             &kp SLASH          &lt 4 ENTER
&kp LEFT_SHIFT  &kp Z   &kp X   &kp C      &kp V          &kp B         &kp COMMA    &kp DOT                   &kp N           &kp M         &kp SEMI         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp RSHFT
                                &kp LCTRL  &kp LEFT_META  &kp LEFT_ALT  &kp SPACE    &mt RIGHT_ALT LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW
            >;
        };

        IPAD_LAYER {
            bindings = <
&kp ESC         &kp N1  &kp N2  &kp N3     &kp N4    &kp N5                           &kp N6    &kp N7  &kp N8     &kp N9   &kp N0     &kp BSPC
&kp TAB         &kp Q   &kp W   &kp E      &kp R     &kp T                            &kp Y     &kp U   &kp I      &kp O    &kp P      &kp MINUS
&lt 3 CAPSLOCK  &kp A   &kp S   &kp D      &kp F     &kp G                            &kp H     &kp J   &kp K      &kp L    &kp SEMI   &kp APOS
&kp LSHFT       &kp Z   &kp X   &kp C      &kp V     &kp B     &kp LBKT     &kp RBKT  &kp N     &kp M   &kp COMMA  &kp DOT  &kp SLASH  &kp RSHFT
                                &kp LCTRL  &kp LALT  &kp LGUI  &kp SPACE    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT
            >;
        };

        fn2_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &trans            &trans          &trans           &trans         &trans                                     &trans         &trans          &trans           &trans                &trans                 &kp DELETE
&trans  &kp SINGLE_QUOTE  &kp UP_ARROW    &kp GRAVE        &kp TILDE      &trans                                     &trans         &trans          &kp C_VOLUME_UP  &trans                &trans                 &kp EQUAL
&trans  &kp LEFT_ARROW    &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp BACKSPACE  &trans                                     &kp DELETE     &kp C_PREVIOUS  &kp C_VOL_DN     &kp C_NEXT            &kp BACKSLASH          &mo 5
&trans  &kp EXCLAMATION   &kp AT_SIGN     &kp HASH         &kp DOLLAR     &kp PERCENT  &kp RA(COMMA)    &kp RA(DOT)  &kp CARET      &kp AMPERSAND   &kp ASTERISK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
                                          &trans           &trans         &trans       &kp ENTER        &kp HOME     &kp PAGE_DOWN  &kp PAGE_UP     &kp END
            >;
        };

        fn3_layer {
            bindings = <
&trans            &trans        &trans        &trans        &trans  &trans                    &trans  &trans  &kp F10  &kp F11  &kp F12  &trans
&kp C_PLAY_PAUSE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans                    &trans  &trans  &kp F7   &kp F8   &kp F9   &trans
&mo 5             &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans                    &trans  &trans  &kp F4   &kp F5   &kp F6   &trans
&trans            &kp N7        &kp N8        &kp N9        &kp N0  &trans  &trans    &trans  &trans  &trans  &kp F1   &kp F2   &kp F3   &trans
                                              &trans        &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        fn4_layer {
            bindings = <
&trans  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2      &bt BT_SEL 3       &bt BT_SEL 4                                     &trans  &trans  &trans  &trans  &trans  &to 2
&trans  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2     &bt BT_DISC 3      &bt BT_DISC 4                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans         &trans         &trans            &trans             &trans                                           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans         &trans         &trans            &trans             &trans             &bt BT_CLR    &bt BT_CLR_ALL  &trans  &trans  &trans  &trans  &trans  &trans
                                      &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &to 0         &to 1           &trans  &trans  &trans
            >;
        };
    };
};
